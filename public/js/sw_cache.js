!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=46)}({46:function(e,n,t){e.exports=t(47)},47:function(e,n){self.addEventListener("install",function(e){console.log("Service Worker: Installed")}),self.addEventListener("activate",function(e){console.log("Service Worker: Activated"),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(e){if("v1"!==e)return console.log("Service Worker: Clearing old cache"),caches.delete(e)}))}))}),self.addEventListener("fetch",function(e){console.log("Service Worker: Fetching"),e.respondWith(fetch(e.request).then(function(n){var t=n.clone();return caches.open("v1").then(function(n){n.put(e.request,t)}),n}).catch(function(n){return caches.match(e.request).then(function(e){return e})}))})}});